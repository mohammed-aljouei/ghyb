{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/Desktop/react-speech-to-text/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useSpeechToText from './Hooks';\nimport micIcon from \"./mic.svg\";\nimport './App.css';\nexport default function App() {\n  _s();\n\n  const {\n    error,\n    interimResult,\n    isRecording,\n    results,\n    startSpeechToText,\n    stopSpeechToText\n  } = useSpeechToText({\n    continuous: true,\n    crossBrowser: true,\n    googleApiKey: 'AIzaSyBAwyfhgmzXyVDhaWYAH5c42FJfPe6IN50',\n    //process.env.REACT_APP_API_KEY,\n    speechRecognitionProperties: {\n      interimResults: true\n    },\n    timeout: 10000\n  });\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '600px',\n        margin: '100px auto',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [error, /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '3rem'\n          },\n          children: \"\\uD83E\\uDD37\\u200D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '100px auto',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      children: [\"var a = ''; if (isRecording.toString() == false) \", a = 'ÿßÿ≥ŸÉÿ™']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Recording: \", a]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isRecording ? stopSpeechToText : startSpeechToText,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: isRecording ? 'Stop Recording' : 'Start Recording'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-recording\": isRecording,\n        src: micIcon,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [results.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: result\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)), interimResult && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: interimResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eXOG1vhXgTpERlurVntqdPCeIGU=\", false, function () {\n  return [useSpeechToText];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin/Desktop/react-speech-to-text/src/App.tsx"],"names":["React","useSpeechToText","App","error","interimResult","isRecording","results","startSpeechToText","stopSpeechToText","continuous","crossBrowser","googleApiKey","speechRecognitionProperties","interimResults","timeout","maxWidth","margin","textAlign","fontSize","a","micIcon","map","result","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,SAA5B;;AAIA,OAAO,WAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,iBALI;AAMJC,IAAAA;AANI,MAOFP,eAAe,CAAC;AAClBQ,IAAAA,UAAU,EAAE,IADM;AAElBC,IAAAA,YAAY,EAAE,IAFI;AAGlBC,IAAAA,YAAY,EAAE,yCAHI;AAIlB;AACAC,IAAAA,2BAA2B,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KALX;AAMlBC,IAAAA,OAAO,EAAE;AANS,GAAD,CAPnB;;AAgBA,MAAIX,KAAJ,EAAW;AACT,wBACE;AACE,MAAA,KAAK,EAAE;AACLY,QAAAA,QAAQ,EAAE,OADL;AAELC,QAAAA,MAAM,EAAE,YAFH;AAGLC,QAAAA,SAAS,EAAE;AAHN,OADT;AAAA,6BAOE;AAAA,mBACGd,KADH,eAEE;AAAM,UAAA,KAAK,EAAE;AAAEe,YAAAA,QAAQ,EAAE;AAAZ,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAED,sBACE;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,QAAQ,EAAE,OADL;AAELC,MAAAA,MAAM,EAAE,YAFH;AAGLC,MAAAA,SAAS,EAAE;AAHN,KADT;AAAA,4BAOE;AAAA,sEAGIE,CAAC,GAAG,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE;AAAA,gCACAA,CADA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAkBE;AAAQ,MAAA,OAAO,EAAEd,WAAW,GAAGG,gBAAH,GAAsBD,iBAAlD;AAAA,8BACE;AAAA,kBAAOF,WAAW,GAAG,gBAAH,GAAsB;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,0BAAgBA,WAArB;AAAkC,QAAA,GAAG,EAAEe,OAAvC;AAAgD,QAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAsBE;AAAA,iBACGd,OAAO,CAACe,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACX;AAAA,kBAAiBD;AAAjB,SAASC,KAAT;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EAIGnB,aAAa,iBAAI;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cAJpB;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAjEuBF,G;UAQlBD,e;;;KARkBC,G","sourcesContent":["import React from 'react';\n\nimport useSpeechToText from './Hooks';\n\nimport micIcon from './mic.svg';\n\nimport './App.css';\n\nexport default function App() {\n  const {\n    error,\n    interimResult,\n    isRecording,\n    results,\n    startSpeechToText,\n    stopSpeechToText\n  } = useSpeechToText({\n    continuous: true,\n    crossBrowser: true,\n    googleApiKey: 'AIzaSyBAwyfhgmzXyVDhaWYAH5c42FJfPe6IN50',\n    //process.env.REACT_APP_API_KEY,\n    speechRecognitionProperties: { interimResults: true },\n    timeout: 10000\n  });\n\n  if (error) {\n    return (\n      <div\n        style={{\n          maxWidth: '600px',\n          margin: '100px auto',\n          textAlign: 'center'\n        }}\n      >\n        <p>\n          {error}\n          <span style={{ fontSize: '3rem' }}>ü§∑‚Äç</span>\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        maxWidth: '600px',\n        margin: '100px auto',\n        textAlign: 'center'\n      }}\n    >\n      <script>\n        var a = '';\n        if (isRecording.toString() == false) {\n          a = 'ÿßÿ≥ŸÉÿ™'\n        }\n      </script>\n      <h1>Recording: {\n      a\n     \n      \n      }</h1>\n      <button onClick={isRecording ? stopSpeechToText : startSpeechToText}>\n        <span>{isRecording ? 'Stop Recording' : 'Start Recording'}</span>\n        <img data-recording={isRecording} src={micIcon} alt=\"\" />\n      </button>\n      <ul>\n        {results.map((result, index) => (\n          <li key={index}>{result}</li>\n        ))}\n        {interimResult && <li>{interimResult}</li>}\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}